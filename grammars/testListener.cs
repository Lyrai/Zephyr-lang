//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from test.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="test"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface ItestListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] test.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] test.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] test.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] test.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] test.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] test.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] test.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] test.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.classBodyDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBodyDecl([NotNull] test.ClassBodyDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.classBodyDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBodyDecl([NotNull] test.ClassBodyDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.typedVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedVarDecl([NotNull] test.TypedVarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.typedVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedVarDecl([NotNull] test.TypedVarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] test.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] test.ClassDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] test.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] test.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStmt([NotNull] test.PrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStmt([NotNull] test.PrintStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] test.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] test.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.compound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompound([NotNull] test.CompoundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.compound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompound([NotNull] test.CompoundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] test.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] test.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] test.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] test.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStmt([NotNull] test.ForStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStmt([NotNull] test.ForStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.funcDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncDecl([NotNull] test.FuncDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.funcDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncDecl([NotNull] test.FuncDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.funcParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncParameters([NotNull] test.FuncParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.funcParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncParameters([NotNull] test.FuncParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.funcArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncArguments([NotNull] test.FuncArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.funcArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncArguments([NotNull] test.FuncArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] test.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] test.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.assignExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignExpr([NotNull] test.AssignExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.assignExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignExpr([NotNull] test.AssignExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.equality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality([NotNull] test.EqualityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.equality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality([NotNull] test.EqualityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison([NotNull] test.ComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison([NotNull] test.ComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] test.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] test.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] test.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] test.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] test.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] test.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] test.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] test.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] test.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] test.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] test.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] test.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="test.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] test.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="test.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] test.TypeContext context);
}
